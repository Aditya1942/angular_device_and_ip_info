import { HttpClient } from '@angular/common/http';
import { Component } from '@angular/core';
import { DeviceDetectorService } from 'ngx-device-detector';
import { initializeApp } from 'firebase/app';
import { firebaseConfig } from 'src/firebase';
import { getAnalytics } from 'firebase/analytics';

// Generated by https://quicktype.io

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css'],
})
export class AppComponent {
  title = 'angular_client_info';
  deviceInfoArr: any[] = [];
  ipLocation: any[] = [];
  constructor(
    private deviceService: DeviceDetectorService,
    private _http: HttpClient
  ) {
    const app = initializeApp(firebaseConfig);
    const analytics = getAnalytics(app);
    let deviceInfo: DeviceInfoModel = this.deviceService.getDeviceInfo();
    this.deviceInfoArr = Object.entries(deviceInfo);
    console.log(this.deviceInfoArr);
    this._http
      .get<IPRespons>('https://ipapi.co/json/')
      .subscribe((data: IPRespons) => {
        console.log(data);
        this.ipLocation = [
          { key: 'IP', value: data.ip },
          { key: 'Country', value: data.country_name },
          { key: 'City', value: data.city },
          { key: 'Region', value: data.region },
          { key: 'Region code', value: data.region_code },
          { key: 'Zip', value: data.postal },
          { key: 'Latitude', value: data.latitude },
          { key: 'Longitude', value: data.longitude },
          { key: 'Timezone', value: data.timezone },
        ];
      });
  }
}
export interface DeviceInfoModel {
  userAgent: string;
  os: string;
  browser: string;
  device: string;
  os_version: string;
  browser_version: string;
  deviceType: string;
  orientation: string;
}
// Generated by https://quicktype.io

export interface IPRespons {
  ip: string;
  version: string;
  city: string;
  region: string;
  region_code: string;
  country: string;
  country_name: string;
  country_code: string;
  country_code_iso3: string;
  country_capital: string;
  country_tld: string;
  continent_code: string;
  in_eu: boolean;
  postal: string;
  latitude: number;
  longitude: number;
  timezone: string;
  utc_offset: string;
  country_calling_code: string;
  currency: string;
  currency_name: string;
  languages: string;
  country_area: number;
  country_population: number;
  asn: string;
  org: string;
}
